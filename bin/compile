#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

BUILD_DIR=$1
CACHE_DIR=$2
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

TEXLIVE_DOMAIN="https://heroku-buildpack-tex.s3.amazonaws.com"
VERSION=`curl $TEXLIVE_DOMAIN/VERSION -s`
TEXLIVE_URL="$TEXLIVE_DOMAIN/texlive-$VERSION.tar.gz"
TEXLIVE_HOME=$BUILD_DIR/.texlive
TEXLIVE_CACHE=$CACHE_DIR/.texlive
PATH=$TEXLIVE_HOME/bin/x86_64-linux:$PATH
PROFILE_D=$BUILD_DIR/.profile.d/texlive.sh

# Output helpers
source $BIN_DIR/utils

# Prepare the various paths
mkdir -p $TEXLIVE_HOME
mkdir -p $TEXLIVE_CACHE
mkdir -p `dirname $PROFILE_D`

if [ -f $TEXLIVE_CACHE/VERSION ] && (( $VERSION == `cat $TEXLIVE_CACHE/VERSION` )); then
    # Get TeX Live from the cache if possible
    build-step "Installing TeX Live $VERSION from cache"
    cp -R $TEXLIVE_CACHE/* $TEXLIVE_HOME
else
    # Get TeX Live from S3 if necessary
    if [ -f "$TEXLIVE_CACHE/VERSION" ]; then
        build-step "Upgrading to TeX Live $VERSION"
    else
        build-step "Fetching TeX Live $VERSION"
    fi

    curl $TEXLIVE_URL -s -o - | tar xzf - -C $TEXLIVE_HOME

    # Make sure the cache is empty
    rm -rf $TEXLIVE_CACHE/*

    # Store a copy of it in the cache so it doesn't have to be fetched again
    cp -R $TEXLIVE_HOME/* $TEXLIVE_CACHE

    # Store the version for later
    echo $VERSION > $TEXLIVE_CACHE/VERSION
fi

#install package dependencies.
#expects a heroku-project-level folder called tex_dependencies
#expects a sty subdirectory of tex_dependencies - install style files

apt-get install lmodern

sty_dest_folder=$BUILD_DIR/.texlive/texmf-local/tex/latex/local
echo "latex sty destination folder: $sty_dest_folder"
rm -rf "$sty_dest_folder"/*
mv "$BIN_DIR"/tex_dependencies/sty/* "$sty_dest_folder"
#expects a tfm subdirectory of tex_dependencies - install fonts
tfm_dest_folder=$BUILD_DIR/.texlive/texmf-local/fonts/tfm/local
echo "latex sty destination folder: $tfm_dest_folder"
rm -rf "$tfm_dest_folder"/*
mv "$BIN_DIR"/tex_dependencies/tfm/* "$tfm_dest_folder"
#expects an afm subdirecotry - install adobe font metrics
afm_dest_folder=$BUILD_DIR/.texlive/texmf-local/fonts/afm/local
mkdir -p $afm_dest_folder
mv "$BIN_DIR"/tex_dependencies/afm/* "$afm_dest_folder"
#expects a map folder - for font maps
map_dest_folder=$BUILD_DIR/.texlive/texmf-local/fonts/map/dvips
mkdir -p $map_dest_folder
mv "$BIN_DIR"/tex_dependencies/map/* "$map_dest_folder"
#expects a pfb folder - for postscript type1 outline
pfb_dest_folder=$BUILD_DIR/.texlive/texmf-local/fonts/type1/local
mkdir -p $pfb_dest_folder
mv "$BIN_DIR"/tex_dependencies/pfb/* "$pfb_dest_folder"
#expects a meta_fd folder - for metafont fonts
meta_fd_dest_folder=$BUILD_DIR/.texlive/texmf-local/tex/latex/mfnfss
mkdir -p $meta_fd_dest_folder
mv "$BIN_DIR"/tex_dependencies/meta_fd/* "$meta_fd_dest_folder"
#expects a mf folder - for metafont outlines
mf_dest_folder=$BUILD_DIR/.texlive/texmf-local/fonts/source/local/
mv "$BIN_DIR"/tex_dependencies/mf/* "$mf_dest_folder"
#expects an enc subdirectory
enc_dest_folder=$BUILD_DIR/.texlive/texmf-local/fonts/enc
mkdir -p $enc_dest_folder
mv "$BIN_DIR"/tex_dependencies/enc/* "$enc_dest_folder"

texhash

#update font maps
updmap-sys --enable Map=hfbright.map
updmap-sys --enable Map=cm-super-t1.map
updmap-sys --enable Map=cm-super-ts1.map
updmap-sys --enable Map=cm-super-t2a.map
updmap-sys --enable Map=cm-super-t2b.map
updmap-sys --enable Map=cm-super-t2c.map
updmap-sys --enable Map=cm-super-x2.map

texhash


# Check for an essential binary to make sure it's installed
if [ ! `which pdflatex` ]; then
    build-warn "TeX Live installation failed"
    exit 1
fi

# Set up the environment for runtimes now that compilation has finished
echo 'export PATH=$HOME/.texlive/bin/x86_64-linux:$PATH' >> $PROFILE_D
